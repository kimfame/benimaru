generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

enum TokenType {
  SIGNUP
  PWRESET
  UPDEMAIL
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  shoppingCart  ShoppingCart[]
}

model VerificationToken {
  id String @id @default(cuid())
  type TokenType
  email String
  token String @unique
  expires DateTime

  @@unique([type, email, token])
}

model CategoryLevel {
  id Int @id @default(autoincrement())
  level1Id Int
  level2Id Int
  level3Id Int

  level1 Category @relation("level1", fields: [level1Id], references: [id], onDelete: Cascade)
  level2 Category @relation("level2", fields: [level2Id], references: [id], onDelete: Cascade)
  level3 Category @relation("level3", fields: [level3Id], references: [id], onDelete: Cascade)
}

model Category {
  id Int @id @default(autoincrement())
  name String
  products CategoryProduct[]

  level1 CategoryLevel[] @relation("level1")
  level2 CategoryLevel[] @relation("level2")
  level3 CategoryLevel[] @relation("level3")
}

model Product {
  id Int @id @default(autoincrement())
  name String
  price String
  description String
  images ProductImage[]
  categories CategoryProduct[]
  shoppingCarts ShoppingCart[]
}

model ProductImage {
  id Int @id @default(autoincrement())
  productId Int 
  imageUrl String
  main Boolean @default(false)

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model CategoryProduct {
  id Int @id @default(autoincrement())
  categoryId Int
  productId Int

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model ShoppingCart {
  id  String  @id @default(cuid())
  userId String
  productId Int
  quantity Int @default(0)

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}